# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
import configparser

config = configparser.ConfigParser()
config.read('config.ini')

username = config['104Info']['acctNO']
password = config['104Info']['pwd']
text = config['104Info']['name']

class TestTest():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def wait_for_window(self, timeout = 2):
    time.sleep(round(timeout / 1000))
    wh_now = self.driver.window_handles
    wh_then = self.vars["window_handles"]
    if len(wh_now) > len(wh_then):
      return set(wh_now).difference(set(wh_then)).pop()
  
  def test_test(self):
    self.driver.get("https://www.104.com.tw/jobs/main/")
    self.driver.set_window_size(1296, 688)
    self.driver.find_element(By.LINK_TEXT, "登入").click()
    self.driver.find_element(By.ID, "username").click()
    self.driver.find_element(By.ID, "username").send_keys(username)
    self.driver.find_element(By.ID, "password").click()
    self.driver.find_element(By.ID, "password").send_keys(password)
    self.driver.find_element(By.ID, "password").send_keys(Keys.ENTER)
    self.driver.find_element(By.ID, "myName").click()
    self.vars["window_handles"] = self.driver.window_handles
    self.driver.find_element(By.LINK_TEXT, "My104會員中心").click()
    self.vars["win5235"] = self.wait_for_window(2000)
    self.driver.switch_to.window(self.vars["win5235"])
    self.driver.find_element(By.CSS_SELECTOR, ".col > .h2").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".col > .h2").text == text
    self.driver.find_element(By.LINK_TEXT, "登出").click()
    self.driver.close()
  
